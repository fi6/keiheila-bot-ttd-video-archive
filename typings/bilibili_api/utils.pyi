"""
This type stub file was generated by pyright.
"""

r"""
模块：utils
功能：基础工具库
项目GitHub地址：https://github.com/Passkou/bilibili_api
项目主页：https://passkou.com/bilibili_api
   _____                _____    _____   _  __   ____    _    _
 |  __ \      /\      / ____|  / ____| | |/ /  / __ \  | |  | |
 | |__) |    /  \    | (___   | (___   | ' /  | |  | | | |  | |
 |  ___/    / /\ \    \___ \   \___ \  |  <   | |  | | | |  | |
 | |       / ____ \   ____) |  ____) | | . \  | |__| | | |__| |
 |_|      /_/    \_\ |_____/  |_____/  |_|\_\  \____/   \____/4
"""
request_settings = { "use_https": True,"proxies": None }
DEFAULT_HEADERS = { "User-Agent": "Mozilla/5.0","Referer": "https://www.bilibili.com/" }
MESSAGES = { "no_sess": "需要提供：SESSDATA（Cookies里头的`SESSDATA`键对应的值）","no_csrf": "需要提供：csrf（Cookies里头的`bili_jct`键对应的值）" }
def get_project_path():
    ...

def get_api():
    """
    获取API
    :return:
    """
    ...

class Color(object):
    def __init__(self, hex_: str = ...) -> None:
        ...
    
    def set_hex_color(self, hex_color: str):
        """
        设置十六进制RGB颜色
        :param hex_color:
        :return:
        """
        ...
    
    def set_rgb_color(self, r: int, g: int, b: int):
        """
        根据RGB三个分量设置颜色
        :param r: 红色分量
        :param g: 绿色分量
        :param b: 蓝色分量
        :return:
        """
        ...
    
    def set_dec_color(self, color: int):
        """
        设置十进制颜色
        :param color:
        :return:
        """
        ...
    
    def get_hex_color(self):
        """
        获取十六进制颜色
        :return:
        """
        ...
    
    def get_rgb_color(self):
        """
        获取RGB三个分量颜色
        :return:
        """
        ...
    
    def get_dec_color(self):
        """
        获取十进制颜色
        :return:
        """
        ...
    
    def __str__(self) -> str:
        ...
    


_crack_uid = None
class Danmaku(object):
    FONT_SIZE_EXTREME_SMALL = ...
    FONT_SIZE_SUPER_SMALL = ...
    FONT_SIZE_SMALL = ...
    FONT_SIZE_NORMAL = ...
    FONT_SIZE_BIG = ...
    FONT_SIZE_SUPER_BIG = ...
    FONT_SIZE_EXTREME_BIG = ...
    MODE_FLY = ...
    MODE_TOP = ...
    MODE_BOTTOM = ...
    MODE_REVERSE = ...
    TYPE_NORMAL = ...
    TYPE_SUBTITLE = ...
    def __init__(self, text: str, dm_time: float = ..., send_time: float = ..., crc32_id: str = ..., color: Color = ..., weight: int = ..., id_: int = ..., id_str: str = ..., action: str = ..., mode: int = ..., font_size: int = ..., is_sub: bool = ..., pool: int = ..., attr: int = ...) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    
    def __len__(self):
        ...
    
    def crack_uid(self):
        """
        暴力破解UID
        :return:
        """
        ...
    


class Verify(object):
    def __init__(self, sessdata: str = ..., csrf: str = ...) -> None:
        ...
    
    def get_cookies(self):
        """
        获取cookies
        :return:
        """
        ...
    
    def has_sess(self):
        """
        是否提供SESSDATA
        :return:
        """
        ...
    
    def has_csrf(self):
        """
        是否提供CSRF
        :return:
        """
        ...
    
    def check(self):
        """
        检查权限情况
        -1: csrf 校验失败
        -2: SESSDATA值有误
        -3: 未提供SESSDATA
        :return:
        """
        ...
    


class CrackUid(object):
    """
    弹幕中的CRC32 ID转换成用户UID
    代码翻译自：https://github.com/esterTion/BiliBili_crc2mid
    """
    def __init__(self) -> None:
        ...
    
    def __call__(self, input_):
        ...
    


def request(method: str, url: str, params=..., data=..., cookies=..., headers=..., data_type: str = ..., **kwargs):
    ...

def get(url, params=..., cookies=..., headers=..., data_type: str = ..., **kwargs):
    """
    专用GET请求
    :param data_type:
    :param url:
    :param params:
    :param cookies:
    :param headers:
    :param kwargs:
    :return:
    """
    ...

def post(url, cookies, data=..., headers=..., data_type: str = ..., **kwargs):
    """
    专用POST请求
    :param data_type:
    :param url:
    :param cookies:
    :param data:
    :param headers:
    :param kwargs:
    :return:
    """
    ...

def delete(url, params=..., data=..., cookies=..., headers=..., data_type: str = ..., **kwargs):
    """
    专用DELETE请求
    :param data_type:
    :param url:
    :param params:
    :param data:
    :param cookies:
    :param headers:
    :param kwargs:
    :return:
    """
    ...

def bvid2aid(bvid: str):
    """
    BV号转AV号
    代码来源：https://www.zhihu.com/question/381784377/answer/1099438784
    :param bvid:
    :return:
    """
    ...

def aid2bvid(aid: int):
    """
    AV号转BV号
    代码来源：https://www.zhihu.com/question/381784377/answer/1099438784
    :param aid:
    :return:
    """
    ...

def upload_image(image_path: str, verify: Verify):
    """
    上传图片
    :param verify:
    :param image_path: 图片路径列表
    :return:
    """
    ...

def read_varint(stream: bytes):
    """
    读取varint
    :param stream:
    :return: value（真实值）, length（varint长度）
    """
    ...

