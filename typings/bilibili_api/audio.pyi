"""
This type stub file was generated by pyright.
"""

from . import utils

r"""
模块： audio
功能： 音频区的各种操作
项目GitHub地址：https://github.com/Passkou/bilibili_api
项目主页：https://passkou.com/bilibili_api
   _____                _____    _____   _  __   ____    _    _
 |  __ \      /\      / ____|  / ____| | |/ /  / __ \  | |  | |
 | |__) |    /  \    | (___   | (___   | ' /  | |  | | | |  | |
 |  ___/    / /\ \    \___ \   \___ \  |  <   | |  | | | |  | |
 | |       / ____ \   ____) |  ____) | | . \  | |__| | | |__| |
 |_|      /_/    \_\ |_____/  |_____/  |_|\_\  \____/   \____/
"""
API = utils.get_api()
def get_info(auid: int = ..., verify: utils.Verify = ...):
    """
    获取音频信息
    :param auid:
    :param verify:
    :return:
    """
    ...

def get_tags(auid: int = ..., verify: utils.Verify = ...):
    """
    获取音频tags
    :param auid:
    :param verify:
    :return:
    """
    ...

def get_user_info(uid: int = ..., verify: utils.Verify = ...):
    """
    获取用户数据（收听数，粉丝数等）
    :param uid:
    :param verify:
    :return:
    """
    ...

def get_download_url(auid: int = ..., verify: utils.Verify = ...):
    """
    获取音频下载链接
    :param auid:
    :param verify:
    :return:
    """
    ...

def get_favorite_list(auid: int, verify: utils.Verify = ...):
    """
    获取收藏夹列表供收藏操作用
    :param auid:
    :param verify:
    :return:
    """
    ...

def add_coins(auid: int = ..., num: int = ..., verify: utils.Verify = ...):
    """
    投币
    :param num: 投币数量，最多2
    :param auid:
    :param verify:
    :return:
    """
    ...

def operate_favorite(auid: int, add_media_ids: list = ..., del_media_ids: list = ..., verify: utils.Verify = ...):
    """
    操作音频收藏夹
    :param auid:
    :param add_media_ids:
    :param del_media_ids:
    :param verify:
    :return:
    """
    ...

def share_to_dynamic(auid: int, content: str, verify: utils.Verify):
    """
    分享歌曲到动态
    :param amid:
    :param content:
    :param verify:
    :return:
    """
    ...

def get_comments_g(auid: int, order: str = ..., verify: utils.Verify = ...):
    """
    获取评论
    :param auid: 音频ID
    :param order:
    :param verify:
    :return:
    """
    ...

def get_sub_comments_g(auid: int, root: int, verify: utils.Verify = ...):
    """
    获取评论下的评论
    :param auid:
    :param root: 根评论ID
    :param verify:
    :return:
    """
    ...

def send_comment(text: str, auid: int, root: int = ..., parent: int = ..., verify: utils.Verify = ...):
    """
    发送评论
    :param auid:
    :param parent: 回复谁的评论的rpid（若不填则对方无法收到回复消息提醒）
    :param root: 根评论rpid，即在哪个评论下面回复
    :param text: 评论内容，为回复评论时不会自动使用`回复 @%用户名%：%回复内容%`这种格式，目前没有发现根据rpid获取评论信息的API
    :param verify:
    :return:
    """
    ...

def set_like_comment(rpid: int, auid: int, status: bool = ..., verify: utils.Verify = ...):
    """
    设置评论点赞状态
    :param auid:
    :param rpid:
    :param status: 状态
    :param verify:
    :return:
    """
    ...

def set_hate_comment(rpid: int, auid: int, status: bool = ..., verify: utils.Verify = ...):
    """
    设置评论点踩状态
    :param auid:
    :param rpid:
    :param status: 状态
    :param verify:
    :return:
    """
    ...

def set_top_comment(rpid: int, auid: int, status: bool = ..., verify: utils.Verify = ...):
    """
    设置评论置顶状态
    :param auid:
    :param rpid:
    :param status: 状态
    :param verify:
    :return:
    """
    ...

def del_comment(rpid: int, auid: int, verify: utils.Verify = ...):
    """
    删除评论
    :param auid:
    :param rpid:
    :param verify:
    :return:
    """
    ...

def list_get_comments_g(amid: int, order: str = ..., verify: utils.Verify = ...):
    """
    获取评论
    :param amid: 歌单ID
    :param order:
    :param verify:
    :return:
    """
    ...

def list_get_sub_comments_g(amid: int, root: int, verify: utils.Verify = ...):
    """
    获取评论下的评论
    :param amid: 歌单ID
    :param root: 根评论ID
    :param verify:
    :return:
    """
    ...

def list_send_comment(text: str, amid: int, root: int = ..., parent: int = ..., verify: utils.Verify = ...):
    """
    发送评论
    :param amid:
    :param parent: 回复谁的评论的rpid（若不填则对方无法收到回复消息提醒）
    :param root: 根评论rpid，即在哪个评论下面回复
    :param text: 评论内容，为回复评论时不会自动使用`回复 @%用户名%：%回复内容%`这种格式，目前没有发现根据rpid获取评论信息的API
    :param verify:
    :return:
    """
    ...

def list_set_like_comment(rpid: int, amid: int, status: bool = ..., verify: utils.Verify = ...):
    """
    设置评论点赞状态
    :param amid:
    :param rpid:
    :param status: 状态
    :param verify:
    :return:
    """
    ...

def list_set_hate_comment(rpid: int, amid: int, status: bool = ..., verify: utils.Verify = ...):
    """
    设置评论点踩状态
    :param amid:
    :param rpid:
    :param status: 状态
    :param verify:
    :return:
    """
    ...

def list_set_top_comment(rpid: int, amid: int, status: bool = ..., verify: utils.Verify = ...):
    """
    设置评论置顶状态
    :param amid:
    :param rpid:
    :param status: 状态
    :param verify:
    :return:
    """
    ...

def list_del_comment(rpid: int, amid: int, verify: utils.Verify = ...):
    """
    删除评论
    :param amid:
    :param rpid:
    :param verify:
    :return:
    """
    ...

def list_get_info(amid: int = ..., verify: utils.Verify = ...):
    """
    获取歌单信息
    :param amid:
    :param verify:
    :return:
    """
    ...

def list_get_tags(amid: int = ..., verify: utils.Verify = ...):
    """
    获取歌单tags
    :param amid:
    :param verify:
    :return:
    """
    ...

def list_get_song_list_raw(amid: int = ..., pn: int = ..., ps: int = ..., verify: utils.Verify = ...):
    """
    低层级API获取歌单歌曲列表
    :param ps: 每页数量默认100
    :param pn: 页码
    :param amid:
    :param verify:
    :return:
    """
    ...

def list_get_song_list_g(amid: int = ..., verify: utils.Verify = ...):
    """
    循环获取歌单歌曲列表
    :param amid:
    :param verify:
    :return:
    """
    ...

def list_set_favorite(amid: int, status=..., verify: utils.Verify = ...):
    """
    删除评论
    :param status:
    :param amid:
    :param verify:
    :return:
    """
    ...

def list_share_to_dynamic(amid: int, content: str, verify: utils.Verify):
    """
    分享歌单到动态
    :param amid:
    :param content:
    :param verify:
    :return:
    """
    ...

