"""
This type stub file was generated by pyright.
"""

from . import utils

r"""
模块：common
功能：通用API，一般用户用不上，不暴露给用户
项目GitHub地址：https://github.com/Passkou/bilibili_api
项目主页：https://passkou.com/bilibili_api
   _____                _____    _____   _  __   ____    _    _
 |  __ \      /\      / ____|  / ____| | |/ /  / __ \  | |  | |
 | |__) |    /  \    | (___   | (___   | ' /  | |  | | | |  | |
 |  ___/    / /\ \    \___ \   \___ \  |  <   | |  | | | |  | |
 | |       / ____ \   ____) |  ____) | | . \  | |__| | | |__| |
 |_|      /_/    \_\ |_____/  |_____/  |_|\_\  \____/   \____/
"""
API = utils.get_api()
COMMENT_TYPE_MAP = { "video": 1,"article": 12,"dynamic_draw": 11,"dynamic_text": 17,"audio": 14,"audio_list": 19 }
COMMENT_SORT_MAP = { "like": 2,"time": 0 }
def send_comment(text: str, oid: int, type_: str, root: int = ..., parent: int = ..., verify: utils.Verify = ...):
    """
    通用发送评论
    :param text:
    :param oid:
    :param type_:
    :param root:
    :param parent:
    :param verify:
    :return:
    """
    ...

def operate_comment(action: str, oid: int, type_: str, rpid: int, status: bool = ..., verify: utils.Verify = ...):
    """
    通用评论操作
    :param action: 操作类型，见api.json
    :param oid:
    :param type_:
    :param rpid:
    :param status: 设置状态
    :param verify:
    :return:
    """
    ...

def get_comments_raw(oid: int, type_: str, order: str = ..., pn: int = ..., verify: utils.Verify = ...):
    """
    通用获取评论
    :param oid:
    :param type_:
    :param order:
    :param pn:
    :param verify:
    :return:
    """
    ...

def get_comments(oid: int, type_: str, order: str = ..., verify: utils.Verify = ...):
    """
    通用循环获取评论，使用生成器语法
    :param type_:
    :param order:
    :param oid:
    :param verify:
    :return:
    """
    ...

def get_sub_comments_raw(oid: int, type_: str, root: int, ps: int = ..., pn: int = ..., verify: utils.Verify = ...):
    """
    通用获取子评论
    :param ps:
    :param root:
    :param oid:
    :param type_:
    :param pn:
    :param verify:
    :return:
    """
    ...

def get_sub_comments(oid: int, type_: str, root: int, ps: int = ..., verify: utils.Verify = ...):
    """
    通用循环获取子评论，使用生成器语法
    :param ps:
    :param root:
    :param type_:
    :param oid:
    :param verify:
    :return:
    """
    ...

def get_vote_info(vote_id: int, verify: utils.Verify = ...):
    """
    获取投票信息
    :param vote_id:
    :param verify:
    :return:
    """
    ...

MEDIA_TYPE_MAP = { "audio": 12,"video": 2 }
def get_favorite_list_old(rid: int, up_mid: int, type_: str, pn: int = ..., ps: int = ..., verify: utils.Verify = ...):
    """
    获取收藏夹列表，旧API
    :param rid:
    :param up_mid:
    :param type_:
    :param pn:
    :param ps:
    :param verify:
    :return:
    """
    ...

def get_favorite_list(up_mid: int = ..., rid: int = ..., type_: str = ..., verify: utils.Verify = ...):
    """
    获取收藏夹列表
    :param up_mid:
    :param rid:
    :param type_:
    :param verify:
    :return:
    """
    ...

def operate_favorite(rid: int, type_: str, add_media_ids: list = ..., del_media_ids: list = ..., verify: utils.Verify = ...):
    """
    操作收藏夹
    :param rid:
    :param type_:
    :param add_media_ids: 要添加的收藏夹内容列表
    :param del_media_ids: 要删除的收藏夹内容列表
    :param verify:
    :return:
    """
    ...

def dynamic_share(type_: str, rid: int, content: str, title: str = ..., cover_url: str = ..., target_url: str = ..., verify: utils.Verify = ...):
    """
    分享站内资源到动态
    :param type_:
    :param rid:
    :param content:
    :param title:
    :param cover_url:
    :param target_url:
    :param verify:
    :return:
    """
    ...

def web_search(keyword: str):
    """
    只指定关键字在web进行搜索，返回未经处理的字典
    """
    ...

def web_search_by_type(keyword: str, search_type: str):
    """
    指定关键字和类型在web进行搜索，返回未经处理的字典
    类型：视频(video)、番剧(media_bangumi)、影视(media_ft)、直播(live)、专栏(article)、话题(topic)、用户(bili_user)
    """
    ...

