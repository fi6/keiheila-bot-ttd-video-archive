"""
This type stub file was generated by pyright.
"""

from . import utils

r"""
模块：live
功能：直播间各种信息和操作
项目GitHub地址：https://github.com/Passkou/bilibili_api
项目主页：https://passkou.com/bilibili_api
   _____                _____    _____   _  __   ____    _    _
 |  __ \      /\      / ____|  / ____| | |/ /  / __ \  | |  | |
 | |__) |    /  \    | (___   | (___   | ' /  | |  | | | |  | |
 |  ___/    / /\ \    \___ \   \___ \  |  <   | |  | | | |  | |
 | |       / ____ \   ____) |  ____) | | . \  | |__| | | |__| |
 |_|      /_/    \_\ |_____/  |_____/  |_|\_\  \____/   \____/
"""
API = utils.get_api()
def get_room_play_info(room_display_id: int, stream_config: dict = ..., verify: utils.Verify = ...):
    """
    获取房间信息（真实房间号，封禁情况等）  
    :param room_display_id: 房间号（展示在URL的房间号）  
    :param stream_config: 获取流信息，如不需要可以不传。内容比较多，参见文档 模块/live#get_room_play_info
    :param verify:  
    :return:
    """
    ...

def get_room_play_url(room_real_id: int, verify: utils.Verify = ...):
    """
    获取获取房间直播流地址
    :param room_real_id: 房间真实ID
    :param verify:
    :return:
    """
    ...

def get_chat_conf(room_real_id: int, verify: utils.Verify = ...):
    """
    获取聊天弹幕服务器配置信息(websocket)
    :param room_real_id: 真实房间号
    :param verify:
    :return:
    """
    ...

def get_room_info(room_real_id: int, verify: utils.Verify = ...):
    """
    获取直播间信息（标题，简介等）
    :param room_real_id: 真实房间ID
    :param verify:
    :return:
    """
    ...

def get_user_info_in_room(room_real_id: int, verify: utils.Verify = ...):
    """
    获取自己在直播间的信息（粉丝勋章等级，直播用户等级等）
    :param room_real_id: 真实房间ID
    :param verify:
    :return:
    """
    ...

def get_self_info(verify: utils.Verify = ...):
    """
    获取直播用户等级等信息
    :param verify:
    :return:
    """
    ...

def get_black_list(room_real_id: int, limit: int = ..., callback=..., verify: utils.Verify = ...):
    """
    获取房间黑名单列表，登录账号需要是该房间房管
    :param callback: 回调
    :param limit: 限制数量
    :param room_real_id: 房间真实ID
    :param verify:
    :return:
    """
    ...

def get_dahanghai_raw(room_real_id: int, ruid: int, page: int = ..., page_size: int = ..., verify: utils.Verify = ...):
    """
    低层级API，获取大航海列表
    :param room_real_id: 房间真实ID
    :param ruid: room_uid
    :param page: 页码
    :param page_size: 保持默认29，每页数量
    :param verify:
    :return:
    """
    ...

def get_dahanghai(room_real_id: int, limit: int = ..., callback=..., verify: utils.Verify = ...):
    """
    获取大航海列表
    :param callback: 回调
    :param limit: 限制数量
    :param room_real_id: 真实房间ID
    :param verify:
    :return:
    """
    ...

def get_seven_rank(room_real_id: int, verify: utils.Verify = ...):
    """
    获取七日榜
    :param room_real_id: 真实房间ID
    :param verify:
    :return:
    """
    ...

def get_fans_medal_rank(room_real_id: int, verify: utils.Verify = ...):
    """
    获取粉丝勋章排行
    :param room_real_id: 真实房间ID
    :param verify:
    :return:
    """
    ...

def send_danmaku(room_real_id: int, danmaku: utils.Danmaku, verify: utils.Verify = ...):
    """
    直播间发送弹幕
    :param room_real_id: 真实房间ID
    :param danmaku: utils.Danmaku
    :param verify:
    :return:
    """
    ...

def ban_user(room_real_id: int, uid: int, hour: int = ..., verify: utils.Verify = ...):
    """
    封禁用户
    :param hour: 封禁时长，小时
    :param uid: 用户UID
    :param room_real_id: 真实房间ID
    :param verify:
    :return:
    """
    ...

def unban_user(room_real_id: int, block_id: int, verify: utils.Verify = ...):
    """
    解封
    :param block_id: 封禁ID，从live.info.black_list中获取或者live.operate.add_black的返回值获取
    :param room_real_id: 真实房间ID
    :param verify:
    :return:
    """
    ...

def connect_all_LiveDanmaku(*livedanmaku_classes):
    """
    简单同时连接多个直播间，一般建议自行处理事件循环来进行更精准的控制
    使用 `room.connect(True)` 可以返回一个 Coroutine，将这个安排进事件循环即可连接到房间
    :param livedanmaku_classes: LiveDanmaku类动态参数
    :return:
    """
    ...

class LiveDanmaku(object):
    """
    Websocket实时获取直播弹幕
    """
    PROTOCOL_VERSION_RAW_JSON = ...
    PROTOCOL_VERSION_HEARTBEAT = ...
    PROTOCOL_VERSION_ZLIB_JSON = ...
    DATAPACK_TYPE_HEARTBEAT = ...
    DATAPACK_TYPE_HEARTBEAT_RESPONSE = ...
    DATAPACK_TYPE_NOTICE = ...
    DATAPACK_TYPE_VERIFY = ...
    DATAPACK_TYPE_VERIFY_SUCCESS_RESPONSE = ...
    def __init__(self, room_display_id: int, debug: bool = ..., use_wss: bool = ..., should_reconnect: bool = ..., verify: utils.Verify = ...) -> None:
        ...
    
    def connect(self, return_coroutine: bool = ...):
        """
        连接直播间
        :param return_coroutine: 是否返回房间入口的 Coroutine 而不是直接连接单个房间。用以自行进行更精准的异步控制。
        :return:
        """
        ...
    
    def disconnect(self):
        """
        断开连接
        :return:
        """
        ...
    
    def get_connect_status(self):
        ...
    
    def add_event_handler(self, event_name: str, func):
        """
        为当前直播弹幕增加事件回调
        :param event_name: 事件名
        :param func: 回调函数
        :return:
        """
        ...
    
    def on(self, name: str):
        """
        使用@语法，触发事件时会被调用
        :param name: 事件名
        :return:
        """
        ...
    


