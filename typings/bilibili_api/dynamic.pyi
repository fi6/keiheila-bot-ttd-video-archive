"""
This type stub file was generated by pyright.
"""

import datetime
from . import utils

r"""
模块： dynamic
功能： 动态发送、操作、信息获取等
项目GitHub地址：https://github.com/Passkou/bilibili_api
项目主页：https://passkou.com/bilibili_api
   _____                _____    _____   _  __   ____    _    _
 |  __ \      /\      / ____|  / ____| | |/ /  / __ \  | |  | |
 | |__) |    /  \    | (___   | (___   | ' /  | |  | | | |  | |
 |  ___/    / /\ \    \___ \   \___ \  |  <   | |  | | | |  | |
 | |       / ____ \   ____) |  ____) | | . \  | |__| | | |__| |
 |_|      /_/    \_\ |_____/  |_____/  |_|\_\  \____/   \____/
"""
API = utils.get_api()
def send_dynamic(text: str, images_path: list = ..., send_time: datetime.datetime = ..., verify: utils.Verify = ...):
    """
    自动判断动态类型选择合适的API并发送动态
    :param text: 动态文本
    :param images_path: 图片路径列表
    :param send_time: 发送时间datatime类
    :param verify:
    :return:
    """
    ...

def get_schedules_list(verify: utils.Verify = ...):
    """
    获取待发送定时动态列表
    :param verify:
    :return:
    """
    ...

def send_schedule_now(draft_id: int, verify: utils.Verify = ...):
    """
    立即发送定时动态
    :param draft_id: 定时动态ID
    :param verify:
    :return:
    """
    ...

def delete_schedule(draft_id: int, verify: utils.Verify = ...):
    """
    删除定时动态
    :param draft_id: 定时动态ID
    :param verify:
    :return:
    """
    ...

def get_info(dynamic_id: int, verify: utils.Verify = ...):
    """
    获取动态信息
    :param dynamic_id: 动态ID
    :param verify:
    :return:
    """
    ...

def get_reposts_raw(dynamic_id: int, offset: str = ..., verify: utils.Verify = ...):
    """
    低层级API，获取动态转发列表
    :param dynamic_id: 动态ID
    :param offset: 偏移值（下一页的第一个动态ID）
    :param verify:
    :return:
    """
    ...

def get_reposts_r(dynamic_id: int, verify: utils.Verify = ...):
    """
    自动循环获取动态转发列表
    :param dynamic_id: 动态ID
    :param verify:
    :return:
    """
    ...

def set_like(dynamic_id: int, status: bool = ..., verify: utils.Verify = ...):
    """
    设置动态点赞状态
    :param dynamic_id: 动态ID
    :param status: 点赞状态
    :param verify:
    :return:
    """
    ...

def delete(dynamic_id: int, verify: utils.Verify = ...):
    """
    删除动态
    :param dynamic_id: 动态ID
    :param verify:
    :return:
    """
    ...

def repost(dynamic_id: int, text: str = ..., verify: utils.Verify = ...):
    """
    转发动态
    :param text: 转发内容
    :param dynamic_id:
    :param verify:
    :return:
    """
    ...

TYPE_MAP = { 2: "dynamic_draw",4: "dynamic_text" }
def get_comments_g(dynamic_id: int, order: str = ..., verify: utils.Verify = ...):
    """
    获取评论
    :param dynamic_id:
    :param order:
    :param verify:
    :return:
    """
    ...

def get_sub_comments_g(dynamic_id: int, root: int, verify: utils.Verify = ...):
    """
    获取评论下的评论
    :param dynamic_id: 动态ID
    :param root: 根评论ID
    :param verify:
    :return:
    """
    ...

def send_comment(text: str, dynamic_id: int, root: int = ..., parent: int = ..., verify: utils.Verify = ...):
    """
    发送评论
    :param dynamic_id:
    :param parent: 回复谁的评论的rpid（若不填则对方无法收到回复消息提醒）
    :param root: 根评论rpid，即在哪个评论下面回复
    :param text: 评论内容，为回复评论时不会自动使用`回复 @%用户名%：%回复内容%`这种格式，目前没有发现根据rpid获取评论信息的API
    :param verify:
    :return:
    """
    ...

def set_like_comment(rpid: int, dynamic_id: int, status: bool = ..., verify: utils.Verify = ...):
    """
    设置评论点赞状态
    :param dynamic_id:
    :param rpid:
    :param status: 状态
    :param verify:
    :return:
    """
    ...

def set_hate_comment(rpid: int, dynamic_id: int, status: bool = ..., verify: utils.Verify = ...):
    """
    设置评论点踩状态
    :param dynamic_id:
    :param rpid:
    :param status: 状态
    :param verify:
    :return:
    """
    ...

def set_top_comment(rpid: int, dynamic_id: int, status: bool = ..., verify: utils.Verify = ...):
    """
    设置评论置顶状态
    :param dynamic_id:
    :param rpid:
    :param status: 状态
    :param verify:
    :return:
    """
    ...

def del_comment(rpid: int, dynamic_id: int, verify: utils.Verify = ...):
    """
    删除评论
    :param dynamic_id:
    :param rpid:
    :param verify:
    :return:
    """
    ...

