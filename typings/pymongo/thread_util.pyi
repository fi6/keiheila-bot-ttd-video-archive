"""
This type stub file was generated by pyright.
"""

"""Utilities for multi-threading support."""
class Semaphore:
    def __init__(self, value=...) -> None:
        ...
    
    def acquire(self, blocking=..., timeout=...):
        ...
    
    __enter__ = ...
    def release(self):
        ...
    
    def __exit__(self, t, v, tb):
        ...
    
    @property
    def counter(self):
        ...
    


class BoundedSemaphore(Semaphore):
    """Semaphore that checks that # releases is <= # acquires"""
    def __init__(self, value=...) -> None:
        ...
    
    def release(self):
        ...
    


class DummySemaphore(object):
    def __init__(self, value=...) -> None:
        ...
    
    def acquire(self, blocking=..., timeout=...):
        ...
    
    def release(self):
        ...
    


class MaxWaitersBoundedSemaphore(object):
    def __init__(self, semaphore_class, value=..., max_waiters=...) -> None:
        ...
    
    def acquire(self, blocking=..., timeout=...):
        ...
    
    def __getattr__(self, name):
        ...
    


class MaxWaitersBoundedSemaphoreThread(MaxWaitersBoundedSemaphore):
    def __init__(self, value=..., max_waiters=...) -> None:
        ...
    


def create_semaphore(max_size, max_waiters):
    ...

